{"version":3,"sources":["web-build/register-service-worker.js","app/views/ApploadingScreen.tsx","app/views/ForgetPassword.tsx","app/views/AuthScreen.tsx","app/views/AppScreen1.tsx","app/views/AppScreen2.tsx","App.tsx","webpack:////home/dani/workspaces2/dani/index.js?970c"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","ApploadingScreen","_bootstrapAsync","a","async","AsyncStorage","getItem","userToken","log","props","navigation","navigate","ScreenConstants","APP_STACK","AUTH_STACK","this","SafeAreaView","style","styles","safeAreaStyle","Text","React","Component","StyleSheet","create","flex","alignItems","justifyContent","APP_FIRST_SCREEN","APP_SECOND_SCREEN","AUTH_LOGIN_SCREEN","AUTH_FORGET_SCREEN","LOADING_SCREEN","ForgetPassword","AuthScreen","state","userName","password","handleSubmit","event","preventDefault","onSubmit","TextInput","textInput","value","onChangeText","setState","title","Button","onPress","borderColor","borderWidth","marginBottom","AppScreen1","AppScreen2","setItem","AppStack","createStackNavigator","screen","navigationOptions","headerTitle","AuthStack","createAppContainer","createSwitchNavigator","registerRootComponent","App"],"mappings":"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","file":"static/js/app.0a9b7872.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React from 'react';\nimport {\n  Text,\n  SafeAreaView,\n  AsyncStorage,\n  StyleSheet\n} from 'react-native';\n\n\nexport class ApploadingScreen extends React.Component {\n    componentDidMount() {\n      this._bootstrapAsync();\n    }\n    _bootstrapAsync = async () => {\n      const userToken = await AsyncStorage.getItem('userAuthFlag');\n      console.log(userToken);\n      this.props.navigation.navigate(\n        userToken ? ScreenConstants.APP_STACK : ScreenConstants.AUTH_STACK,\n      );\n    };\n  \n    render() {\n      return (\n        <SafeAreaView style={styles.safeAreaStyle}>\n          <Text>Loading</Text>\n        </SafeAreaView>\n      );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    safeAreaStyle: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n\n  const ScreenConstants = {\n    APP_FIRST_SCREEN: 'AppScreen1',\n    APP_SECOND_SCREEN: 'AppScreen2',\n    AUTH_LOGIN_SCREEN: 'login',\n    AUTH_FORGET_SCREEN: 'forgetPassword',\n    LOADING_SCREEN: 'AppLoading',\n    APP_STACK: 'AppStack',\n    AUTH_STACK: 'AuthStack',\n  };","import React from 'react';\nimport {\n  Text,\n  SafeAreaView,\n  StyleSheet\n} from 'react-native';\n\nexport class ForgetPassword extends React.Component {\n  render() {\n    return (\n      <SafeAreaView style={styles.safeAreaStyle}>\n        <Text>forget password</Text>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n    safeAreaStyle: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });","import React from 'react';\nimport {\n    Text,\n  TextInput,\n  SafeAreaView,\n  Button,\n  StyleSheet,\n  AsyncStorage,\n  Alert\n} from 'react-native';\n\nconst AsyncStoreConstant = 'userAuthFlag';\n\nexport class AuthScreen extends React.Component {\n\n    state = {userName : '',\n            password: ''};\n    handleSubmit = (event) => {\n        event.preventDefault();\n        // if(this.state.userName==='admin' && this.state.password==='password')\n        // {\n        //     AsyncStorage.setItem(AsyncStoreConstant, 'doneAuth');\n        //         this.props.navigation.navigate(ScreenConstants.APP_STACK);\n        // }else\n        // {\n        //     console.log(\"Alert\");\n        //     Alert.alert(\"Wrong credentials\",\"Try again!\"); \n        // }\n    }\n\n    render() {\n      return (\n        <SafeAreaView style={styles.safeAreaStyle}>\n            <form onSubmit = {this.handleSubmit}>\n            <Text>Username:</Text>\n          <TextInput \n            style={styles.textInput}\n            value={this.state.userName}\n            onChangeText={event => this.setState({userName:event})}\n          ></TextInput>\n          <Text>Password:</Text>\n          <TextInput \n            style={styles.textInput}\n            value={this.state.password}\n            onChangeText={event => this.setState({password:event})}\n          ></TextInput>\n          <button\n            title=\"Login\"\n            // onPress={() => {\n            //   AsyncStorage.setItem(AsyncStoreConstant, 'doneAuth');\n            //     this.props.navigation.navigate(ScreenConstants.APP_STACK);\n            // }}\n          >Login </button>\n          <Button\n            title=\"Forget Password\"\n            onPress={() => {\n              this.props.navigation.navigate(ScreenConstants.AUTH_FORGET_SCREEN);\n            }}\n          />\n          </form>\n        </SafeAreaView>\n      );\n    }\n  }\n  const styles = StyleSheet.create({\n    safeAreaStyle: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    textInput:\n    {\n        borderColor: '#000000',\n        borderWidth: 1,\n        marginBottom:20\n    }\n  });\n  \n  const ScreenConstants = {\n    APP_FIRST_SCREEN: 'AppScreen1',\n    APP_SECOND_SCREEN: 'AppScreen2',\n    AUTH_LOGIN_SCREEN: 'login',\n    AUTH_FORGET_SCREEN: 'forgetPassword',\n    LOADING_SCREEN: 'AppLoading',\n    APP_STACK: 'AppStack',\n    AUTH_STACK: 'AuthStack',\n  };","import React from 'react';\nimport {\n  Text,\n  SafeAreaView,\n  Button,\n  StyleSheet\n} from 'react-native';\n\n\nexport class AppScreen1 extends React.Component {\n  render() {\n    return (\n      <SafeAreaView style={styles.safeAreaStyle}>\n        <Text>I am App Screen One</Text>\n        <Button\n          title=\"Go to Screen 2\"\n          onPress={() => {\n            this.props.navigation.navigate(ScreenConstants.APP_SECOND_SCREEN);\n          }}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  safeAreaStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenConstants = {\n  APP_FIRST_SCREEN: 'AppScreen1',\n  APP_SECOND_SCREEN: 'AppScreen2',\n  AUTH_LOGIN_SCREEN: 'login',\n  AUTH_FORGET_SCREEN: 'forgetPassword',\n  LOADING_SCREEN: 'AppLoading',\n  APP_STACK: 'AppStack',\n  AUTH_STACK: 'AuthStack',\n};","import React from 'react';\nimport {\n  Text,\n  SafeAreaView,\n  Button,\n  StyleSheet,\n  AsyncStorage\n} from 'react-native';\n\nconst AsyncStoreConstant = 'userAuthFlag';\n\n\nexport class AppScreen2 extends React.Component {\n    render() {\n      return (\n        <SafeAreaView style={styles.safeAreaStyle}>\n          <Text>I am App Screen Two</Text>\n          <Button\n            title=\"Logout\"\n            onPress={() => {\n              AsyncStorage.setItem(AsyncStoreConstant, '');\n              this.props.navigation.navigate(ScreenConstants.AUTH_STACK);\n            }}\n          />\n        </SafeAreaView>\n      );\n    }\n  }\n\n  const styles = StyleSheet.create({\n    safeAreaStyle: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  });\n  \n  const ScreenConstants = {\n    APP_FIRST_SCREEN: 'AppScreen1',\n    APP_SECOND_SCREEN: 'AppScreen2',\n    AUTH_LOGIN_SCREEN: 'login',\n    AUTH_FORGET_SCREEN: 'forgetPassword',\n    LOADING_SCREEN: 'AppLoading',\n    APP_STACK: 'AppStack',\n    AUTH_STACK: 'AuthStack',\n  };","import React from 'react';\n\nimport {createSwitchNavigator, createAppContainer} from 'react-navigation';\nimport {createStackNavigator} from 'react-navigation-stack';\nimport {ApploadingScreen} from './app/views/ApploadingScreen'\nimport {ForgetPassword} from './app/views/ForgetPassword'\nimport {AuthScreen} from './app/views/AuthScreen'\nimport {AppScreen1} from './app/views/AppScreen1'\nimport {AppScreen2} from './app/views/AppScreen2'\n\nconst ScreenConstants = {\n  APP_FIRST_SCREEN: 'AppScreen1',\n  APP_SECOND_SCREEN: 'AppScreen2',\n  AUTH_LOGIN_SCREEN: 'login',\n  AUTH_FORGET_SCREEN: 'forgetPassword',\n  LOADING_SCREEN: 'AppLoading',\n  APP_STACK: 'AppStack',\n  AUTH_STACK: 'AuthStack',\n};\n\n\n\n\n\n\nconst AppStack = createStackNavigator({\n  [ScreenConstants.APP_FIRST_SCREEN]: {\n    screen: AppScreen1,\n    navigationOptions: () => ({\n      headerTitle: 'My First App Screen',\n    }),\n  },\n  [ScreenConstants.APP_SECOND_SCREEN]: {\n    screen: AppScreen2,\n    navigationOptions: () => ({\n      headerTitle: 'My Second App Screen',\n    }),\n  },\n});\n\nconst AuthStack = createStackNavigator({\n  [ScreenConstants.AUTH_LOGIN_SCREEN]: {\n    screen: AuthScreen,\n    navigationOptions: () => ({\n      headerTitle: 'Login Screen',\n    }),\n  },\n  [ScreenConstants.AUTH_FORGET_SCREEN]: {\n    screen: ForgetPassword,\n    navigationOptions: () => ({\n      headerTitle: 'Forget Password',\n    }),\n  },\n});\n\nexport default createAppContainer(\n  createSwitchNavigator({\n    [ScreenConstants.LOADING_SCREEN]: ApploadingScreen,\n    [ScreenConstants.AUTH_STACK]: AuthStack,\n    [ScreenConstants.APP_STACK]: AppStack,\n  }),\n);\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}